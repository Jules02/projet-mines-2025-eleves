{"version":3,"file":"red-message.js","sourceRoot":"","sources":["src/red-message.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE1D;;;;;;GAMG;AAEI,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAAnC;;QA0DL;;WAEG;QAEH,gBAAW,GAAG,EAAE,CAAC;QAEjB;;WAEG;QAEH,oBAAe,GAAG,EAAE,CAAC;QAErB;;WAEG;QAEH,YAAO,GAAG,+CAA+C,CAAC;QAE1D;;WAEG;QAEH,cAAS,GAAG,EAAE,CAAC;QAEf;;WAEG;QAEH,UAAK,GAAG,CAAC,CAAC;QAEV;;WAEG;QAEH,SAAI,GAAG,EAAE,CAAC;IAmCZ,CAAC;IAjCU,MAAM;QACb,OAAO,IAAI,CAAA;;;sCAGwB,IAAI,CAAC,WAAY,4CAA6C,IAAI,CAAC,eAAgB;;6BAE5F,IAAI,CAAC,OAAQ;;oCAEN,IAAI,CAAC,SAAU;;;;;yCAKV,IAAI,CAAC,KAAM;;4BAExB,IAAI,CAAC,IAAK;;;KAGlC,CAAC;IACJ,CAAC;IAED;;;OAGG;IAEH;;;OAGG;IACH,QAAQ,CAAC,IAAY;QACnB,OAAO,UAAU,IAAI,EAAE,CAAC;IAC1B,CAAC;;AA7He,iBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuD3B,AAvDqB,CAuDpB;AAMF;IADC,QAAQ,EAAE;+CACM;AAMjB;IADC,QAAQ,EAAE;mDACU;AAMrB;IADC,QAAQ,EAAE;2CAC+C;AAM1D;IADC,QAAQ,EAAE;6CACI;AAMf;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;yCACf;AAMV;IADC,QAAQ,EAAE;wCACD;AA5FC,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CA+HtB","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('red-message')\nexport class RedMessage extends LitElement {\n  static override styles = css`\n      :host {\n          width: 80%;\n          \n          display: flex;\n          justify-content: center;\n      }\n      \n      .wrapper {\n          \n          width: 100%;\n\n          padding: 15px;\n\n          border: solid 1px rgba(0, 48, 73, 0.3);\n          border-radius: 3px;\n          background-color: white;\n\n\n          -webkit-box-shadow: 0 0 150px 0 rgba(173,173,173,0.2);\n          -moz-box-shadow: 0 0 150px 0 rgba(173,173,173,0.2);\n          box-shadow: 0 0 150px 0 rgba(173,173,173,0.2);\n      }\n\n      .author-username {\n          font-size: 12px;\n          font-weight: 100;\n      }\n\n      .footer {\n          display: flex;\n          justify-content: space-between;\n          align-items: baseline;\n      }\n\n\n      .like-button {\n          font-size: 16px;\n          border: none;\n          background-color: white;\n          padding: 0;\n      }\n\n      .date {\n          font-size: 12px;\n          font-weight: 100;\n      }\n\n      .image-container {\n          text-align: center ;\n      }\n\n      .image {\n          width: 400px;\n      }\n  `;\n\n  /**\n   * The text content of the message\n   */\n  @property()\n  author_name = '';\n\n  /**\n   * The text content of the message\n   */\n  @property()\n  author_username = '';\n\n  /**\n   * The text content of the message\n   */\n  @property()\n  content = 'Lorem ipsum dolor sit amet, consectetur adipi';\n\n  /**\n   * The text content of the message\n   */\n  @property()\n  image_src = '';\n\n  /**\n   * The date when the message was published\n   */\n  @property({type: Number})\n  likes = 0;\n\n  /**\n   * The date when the message was published\n   */\n  @property()\n  date = '';\n\n  override render() {\n    return html`\n      <div class=\"wrapper\">\n        <div class=\"author-wrapper\">\n          <span class=\"author-name\">${ this.author_name }</span> - <span class=\"author-username\">@${ this.author_username }</span>\n        </div>\n        <p class=\"content\">${ this.content }</p>\n        <div class=\"image-container\">\n          <img class=\"image\" src=\"${ this.image_src }\">\n        </div>\n        <div class=\"footer\">\n          <div class=\"like-wrapper\">\n            <button class=\"like-button\">&#x2665</button>\n            <span class=\"like-counter\">${ this.likes }</span>\n          </div>\n          <p class=\"date\">${ this.date }</p>\n        </div>\n      </div>\n    `;\n  }\n\n  /*private _onClick() {\n    this.count++;\n    this.dispatchEvent(new CustomEvent('count-changed'));\n  }*/\n\n  /**\n   * Formats a greeting\n   * @param name The name to say \"Hello\" to\n   */\n  sayHello(name: string): string {\n    return `Hello, ${name}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'red-message': RedMessage;\n  }\n}"]}