{"version":3,"file":"red-message.js","sourceRoot":"","sources":["src/red-message.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAE,mBAAmB,EAAE,MAAM,UAAU,CAAC;AAC/C,OAAO,EAAE,EAAE,EAAE,MAAM,iBAAiB,CAAC;AAErC;;;GAGG;AAEI,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAAnC;;QAuEL;;WAEG;QAEH,gBAAW,GAAG,EAAE,CAAC;QAEjB;;WAEG;QAEH,oBAAe,GAAG,EAAE,CAAC;QAErB;;WAEG;QAEH,YAAO,GAAG,+CAA+C,CAAC;QAE1D;;WAEG;QAEH,cAAS,GAAG,EAAE,CAAC;QAEf;;WAEG;QAEH,UAAK,GAAG,CAAC,CAAC;QAGV,UAAK,GAAG,KAAK,CAAC;QAEd;;WAEG;QAEH,SAAI,GAAG,EAAE,CAAC;IA4BZ,CAAC;IA1BU,MAAM;QACb,OAAO,IAAI,CAAA;;;sCAGwB,IAAI,CAAC,WAAY,4CAA6C,IAAI,CAAC,eAAgB;;;6BAG5F,IAAI,CAAC,OAAQ;;oCAEN,IAAI,CAAC,SAAU;;;;iDAIH,IAAI,CAAC,UAAU,IAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAI;yCAClD,IAAI,CAAC,KAAM;;4BAExB,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC;;;KAGtF,CAAC;IACJ,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;;AAtIe,iBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoE3B,AApEqB,CAoEpB;AAMF;IADC,QAAQ,EAAE;+CACM;AAMjB;IADC,QAAQ,EAAE;mDACU;AAMrB;IADC,QAAQ,EAAE;2CAC+C;AAM1D;IADC,QAAQ,EAAE;6CACI;AAMf;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;yCACf;AAGV;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;yCACZ;AAMd;IADC,QAAQ,EAAE;wCACD;AA5GC,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CAwItB","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport { formatDistanceToNow } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\n/**\n * An example element.\n *\n */\n@customElement('red-message')\nexport class RedMessage extends LitElement {\n  static override styles = css`\n      :host {\n          width: 80%;\n          \n          display: flex;\n          justify-content: center;\n      }\n      \n      .wrapper {\n          \n          width: 100%;\n\n          padding: 15px;\n\n          border: solid 1px rgba(0, 48, 73, 0.3);\n          border-radius: 3px;\n          background-color: white;\n\n\n          -webkit-box-shadow: 0 0 150px 0 rgba(173,173,173,0.2);\n          -moz-box-shadow: 0 0 150px 0 rgba(173,173,173,0.2);\n          box-shadow: 0 0 150px 0 rgba(173,173,173,0.2);\n      }\n\n      .author-username {\n          font-size: 12px;\n          font-weight: 100;\n      }\n\n      .footer {\n          display: flex;\n          justify-content: space-between;\n          align-items: baseline;\n      }\n\n\n      .like-button {\n          font-size: 16px;\n          border: none;\n          background-color: white;\n          padding: 0;\n      }\n\n      .like-button:hover {\n          cursor: pointer;\n      }\n\n      .date {\n          font-size: 12px;\n          font-weight: 100;\n      }\n\n      .image-container {\n          text-align: center ;\n      }\n\n      .image {\n          width: 400px;\n      }\n      \n      profile-card {\n          display: none;\n      }\n      \n      .author-wrapper:hover profile-card {\n          display: block;\n          position: absolute;\n      }\n  `;\n\n  /**\n   * The author full name\n   */\n  @property()\n  author_name = '';\n\n  /**\n   * The author username\n   */\n  @property()\n  author_username = '';\n\n  /**\n   * The text content of the message\n   */\n  @property()\n  content = 'Lorem ipsum dolor sit amet, consectetur adipi';\n\n  /**\n   * The source of the uploaded image\n   */\n  @property()\n  image_src = '';\n\n  /**\n   * The number of likes\n   */\n  @property({type: Number})\n  likes = 0;\n\n  @property({type: Boolean})\n  liked = false;\n\n  /**\n   * The date when the message was published\n   */\n  @property()\n  date = '';\n\n  override render() {\n    return html`\n      <div class=\"wrapper\">\n        <div class=\"author-wrapper\">\n          <span class=\"author-name\">${ this.author_name }</span> - <span class=\"author-username\">@${ this.author_username }</span>\n          <profile-card></profile-card>\n        </div>\n        <p class=\"content\">${ this.content }</p>\n        <div class=\"image-container\">\n          <img class=\"image\" src=\"${ this.image_src }\">\n        </div>\n        <div class=\"footer\">\n          <div class=\"like-wrapper\">\n            <button class=\"like-button\" @click=${this.handleLike}>${ this.liked ? '♥' : '♡' }</button>\n            <span class=\"like-counter\">${ this.likes }</span>\n          </div>\n          <p class=\"date\">${ formatDistanceToNow(this.date, { addSuffix: true, locale: fr})}</p>\n        </div>\n      </div>\n    `;\n  }\n\n  private handleLike() {\n    this.liked = !this.liked;\n    this.likes += this.liked ? 1 : -1;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'red-message': RedMessage;\n  }\n}"]}